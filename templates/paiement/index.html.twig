{% extends 'base.html.twig' %}

{% block body %}
   <h1 style="text-align: center;font-size: 30px;font-weight: bold">Créer une publicite</h1>
   <br>
   {{ form_start(form) }}
   {{ form_widget(form) }}
   <form id="payment-form">
      <div id="card-element">
         <!-- Elements will create input elements here -->
      </div>

      <!-- We'll put the error messages in this element -->
      <div id="card-errors" role="alert"></div>

      <button id="submit">Submit Payment</button>
   </form>
   {{ form_end(form) }}

   <ul>
      <li>
         <a href="{{ path('readOrganisation') }}">Retour à la liste</a>
      </li>
   </ul>
   <script src="https://js.stripe.com/v3/"></script>
   <script>
      var stripe = Stripe('pk_test_pKoLAPoBFwVaritcQtcrrqqT00GS9O2drI');
      var elements = stripe.elements();
      // Set up Stripe.js and Elements to use in checkout form
      var style = {
         base: {
            color: "#32325d",
         }
      };

      var card = elements.create("card", { style: style });
      card.mount("#card-element");
      card.addEventListener('change', ({error}) => {
         const displayError = document.getElementById('card-errors');
         if (error) {
            displayError.textContent = error.message;
         } else {
            displayError.textContent = '';
         }
      });
      var form = document.getElementById('payment-form');

      form.addEventListener('submit', function(ev) {
         ev.preventDefault();
         stripe.confirmCardPayment(clientSecret, {
            payment_method: {
               card: card,
               billing_details: {
                  name: 'Jenny Rosen'
               }
            }
         }).then(function(result) {
            if (result.error) {
               // Show error to your customer (e.g., insufficient funds)
               console.log(result.error.message);
            } else {
               // The payment has been processed!
               if (result.paymentIntent.status === 'succeeded') {
                  // Show a success message to your customer
                  // There's a risk of the customer closing the window before callback
                  // execution. Set up a webhook or plugin to listen for the
                  // payment_intent.succeeded event that handles any business critical
                  // post-payment actions.
               }
            }
         });
      });
   </script>

{% endblock %}